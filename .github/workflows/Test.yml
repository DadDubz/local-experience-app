name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x]
        mongodb-version: [4.4]  # More stable version for CI/CD

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1  # Ensures full repo is cloned

      - name: Debug Working Directory
        run: pwd && ls -la  # Prints the current directory to check if package.json is present

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Stop old MongoDB instances (if any)
        run: |
          sudo systemctl stop mongod || true
          docker stop $(docker ps -q --filter ancestor=mongo) || true
          docker rm $(docker ps -aq --filter ancestor=mongo) || true

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-version: "4.4"
          mongodb-port: 27017

      - name: Wait for MongoDB to start
        run: sleep 20s  # Allows MongoDB time to initialize

      - name: Check MongoDB Status
        run: ps aux | grep mongo  # Debugging step

      - name: Install backend dependencies
        working-directory: backend
        run: npm ci

      - name: Install frontend dependencies (if exists)
        run: |
          if [ -d "frontend" ]; then cd frontend && npm ci; fi

      - name: Run backend tests
        working-directory: backend
        run: npm test
        env:
          CI: true
          MONGODB_URI: mongodb://localhost:27017/test
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          NODE_ENV: test

      - name: Run frontend tests (if exists)
        working-directory: frontend
        run: |
          if [ -d "frontend" ]; then npm test; fi
        env:
          CI: true

      - name: Build check
        run: |
          npm run build
          if [ -d "frontend" ]; then cd frontend && npm run build; fi

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            backend/coverage/
            frontend/coverage/
