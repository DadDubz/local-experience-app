name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x]
        mongodb-version: [4.4]  # More stable in CI/CD

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.10.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}

    - name: Wait for MongoDB to start
      run: sleep 10s  # Ensures MongoDB is ready before running tests

    - name: Check MongoDB Status
      run: ps aux | grep mongo

    - name: Install backend dependencies
      run: npm ci

    - name: Install frontend dependencies (if exists)
      run: |
        if [ -d "frontend" ]; then cd frontend && npm ci; fi

    - name: Run backend tests
      run: npm test
      env:
        CI: true
        MONGODB_URI: mongodb://localhost:27017/test
        JWT_SECRET: test_secret
        NODE_ENV: test

    - name: Run frontend tests (if exists)
      working-directory: ./frontend
      run: |
        if [ -d "frontend" ]; then npm test; fi
      env:
        CI: true

    - name: Build check
      run: |
        npm run build
        if [ -d "frontend" ]; then cd frontend && npm run build; fi

    - name: Ensure Coverage Directories Exist
      run: |
        mkdir -p coverage
        mkdir -p frontend/coverage

    - name: Upload coverage
      uses: actions/upload-artifact@v4
      with:
        name: coverage
        path: |
          coverage/
          frontend/coverage/

    - name: Run integration tests
      run: npm run test:integration
      env:
        CI: true
        MONGODB_URI: mongodb://localhost:27017/test
        JWT_SECRET: test_secret
        NODE_ENV: test

    - name: Check for npm vulnerabilities
      run: |
        npm audit --audit-level=critical || echo "Ignoring non-critical vulnerabilities"
        if [ -d "frontend" ]; then cd frontend && npm audit --audit-level=critical || echo "Ignoring non-critical vulnerabilities"; fi
